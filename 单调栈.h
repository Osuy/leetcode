#pragma once
/*
	用于寻找每个元素的下一个更大/更小小的元素
	入栈的规则是始终比栈顶大/小，如果不满足，出栈直到满足或栈空
	因为对于一个无序的数组而言，加载两个更大的值中间的小值，永远不可能是外面的元素的答案
	所以将这些小值出栈，保持栈是单调递增的，且每次出栈/入栈，相关的元素就能得到答案
	即，对于元素i，它的下一更大元素，需要用递增的视角去看余下的数组，所以先暂时保存在栈里
	直到入栈一个更大的元素，说明它的答案找到了，将他出栈



	有从左往右和从右往左两种解法
	例如：数组{ 1，7，4，5，3，3，9，2}，求每个元素的下一个更大元素

	从左往右，出栈时得到答案
		1入栈
		7，比栈顶大，出栈
			1出栈，且 1的下一个更大元素就是7
			7入栈7
		4比栈顶7小，入栈74
		5比栈顶4大，出栈
			4出栈7，且4的下一更大元素是5
			5入栈75
		3比栈顶小，入栈753
		3比栈顶相等，入栈7533
		9比栈顶大，出栈
			3出栈753，3的下一更大元素是9
			3出栈75，3的下一更大元素是9
			5出栈7，5的下一更大元素是9
			7出栈，7的下一更大元素是9
			9入栈9
		2比栈顶小，入栈92
	答案：795999-1-1

	{ 1，7，4，5，3，3，9，2}
	从右往左，入栈时得到答案
		2入栈
		9比栈顶2大，出栈
			2出栈
			9入栈 9
		3比栈顶小，入栈
			3入栈93， 3的下一更大元素是9
		3比栈顶相等，
			3出栈9，
			3入栈93，3的下一更大元素是9
		5比栈顶3大，出栈
			3出栈9，
			5入栈59，5的下一更大元素是9
		4比栈顶小，入栈
			4入栈954，4的下一更大元素是5
		7比栈顶大，出栈
			4出栈95，
			5出栈9
			7入栈97，7的下一更大元素是9
		1比栈顶小，入栈
			1入栈971，1下一更大元素是7
		795999-1-1
*/