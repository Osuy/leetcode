#pragma once
#include "leetcode/base_header.h"
/*
	一种用于求解区间的技巧

	题目求[i,j]的区间，直接去遍历所有区间是双循环，验证区间是否满足题目要求可能也要一次循环，
	所以纯暴力解法时间复杂度是O(n^3)，而对于输入是数组的题目基本都是10e5量级的，也就是必须要优化的O(nlogn)以下
	假如区间[i,j]的条件可以通过[0,i-1]和[0,j]进行运算得到，并且这种运算可逆。则可以先对
		[0,i-1]和[0,j]进行逆运算，然后再用两个区间正向运算得到结果

	例如求区间[i,j]内元素的和，如果已知[0,i-1]和[0,j]内的和，将两者相减即可得到答案

	三个特征
		一、求区间
		二、运算可逆
		三、可通过两个区间的逆运算得到答案
	
	通常求得的前缀和是区间的右界。（循环计算前缀和，有上一个前缀和计算得来，所以当前往前的都是已知的）
	而能够明了地知道左界在哪里的题目是很少的，更多是需要头脑风暴求解左界
	左界本质也是一个已算出的前缀和，所以
	经常需要配合哈希表记录已经遇到的前缀的索引或次数来加速求解

	如果数组内的元素没有负数，那么一般都可以用滑动窗口来做
	而如果有负数，则要用前缀和
*/